<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan	base-package="com.brickfarm.controller" />
	<context:component-scan base-package="com.brickfarm.exception" />
	<context:component-scan base-package="com.brickfarm.auth" />
	<context:component-scan base-package="com.brickfarm.etc.syt" />
	<context:component-scan base-package="com.brickfarm.etc.sjy" />
	<context:component-scan base-package="com.brickfarm.etc.psj" />
	
	<context:property-placeholder location="classpath:/env/*" />
	

	<!-- 최대 파일 업로드 용량 설정 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="5242880"></beans:property>
	</beans:bean>



	<!-- OAuth2 login for Kakao by ysh -->
	<beans:bean id="kakaoClientID" class="java.lang.String">
		<beans:constructor-arg
			value="${kakao.clientId}" />
	</beans:bean>

	<beans:bean id="kakaoRedirectUrl" class="java.lang.String">
		<beans:constructor-arg
			value="http://localhost:8081/auth/kakao/callback" />
	</beans:bean>
	
	<beans:bean id="scope" class="java.lang.String">
		<beans:constructor-arg
			value="account_email" />
	</beans:bean>
	
	<beans:bean id="response_type" class="java.lang.String">
		<beans:constructor-arg
			value="code" />
	</beans:bean>
	
	

	<beans:bean id="kakaoSns" class="com.brickfarm.auth.SnsValue">
		<beans:constructor-arg value="kakao" />
		<beans:constructor-arg ref="kakaoClientID" />
		<beans:constructor-arg ref="kakaoRedirectUrl" />
		<beans:constructor-arg ref="scope" />
		<beans:constructor-arg ref="response_type" />
	</beans:bean>




	<!-- OAuth2 login for Naver by ysh -->

	<beans:bean id="naverClientID" class="java.lang.String">
		<beans:constructor-arg
			value="${naver.clientId}" />
	</beans:bean>

	<beans:bean id="naverClientSecret" class="java.lang.String">
		<beans:constructor-arg value="${naver.secret}" />
	</beans:bean>

	<beans:bean id="naverRedirectUrl" class="java.lang.String">
		<beans:constructor-arg
			value="http://localhost:8081/auth/naver/callback" />
	</beans:bean>

	<beans:bean id="naverSns"
		class="com.brickfarm.auth.SnsValue">
		<beans:constructor-arg value="naver" />
		<beans:constructor-arg ref="naverClientID" />
		<beans:constructor-arg ref="naverClientSecret" />
		<beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>
	
	

	<!-- 네이버 sms문자 발송 -->
	<beans:bean id="naverServiceId" class="java.lang.String">
		<beans:constructor-arg
			value="${naver-cloud-sms.serviceId}" />
	</beans:bean>

	<beans:bean id="naverAccessKey" class="java.lang.String">
		<beans:constructor-arg
			value="${naver-cloud-sms.accessKey}" />
	</beans:bean>

	<beans:bean id="naverSecretKey" class="java.lang.String">
		<beans:constructor-arg
			value="${naver-cloud-sms.secretKey}" />
	</beans:bean>





	<!-- OAuth2 login for google by ysh -->

	<beans:bean id="googleClientID" class="java.lang.String">
		<beans:constructor-arg
			value="${google.clientId}" />
	</beans:bean>

	<beans:bean id="googleClientSecret" class="java.lang.String">
		<beans:constructor-arg
			value="${google.secret}" />
	</beans:bean>
	<beans:bean id="googleRedirectUrl" class="java.lang.String">
		<beans:constructor-arg
			value="http://localhost:8081/auth/google/callback" />
	</beans:bean>


	<!-- 밑에 value를 String 으로 작성보다는 ref로 만들어주기 위해 위의코드에서 값들을 미리 지정. -->
	<beans:bean id="googleSns"
		class="com.brickfarm.auth.SnsValue">
		<beans:constructor-arg value="google" />
		<beans:constructor-arg ref="googleClientID" />
		<beans:constructor-arg ref="googleClientSecret" />
		<beans:constructor-arg ref="googleRedirectUrl" />
	</beans:bean>

	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg ref="googleClientID" /><!-- ClientID -->
		<beans:constructor-arg ref="googleClientSecret" /><!-- ClientPWD -->
	</beans:bean>

	<beans:bean id="googleOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/user.addresses.read https://www.googleapis.com/auth/user.birthday.read 
		https://www.googleapis.com/auth/user.emails.read https://www.googleapis.com/auth/user.gender.read https://www.googleapis.com/auth/user.phonenumbers.read"/>

		<!-- callback URI -->
		<beans:property name="redirectUri" ref="googleRedirectUrl" />
	</beans:bean>






	<!-- 인터셉터를 추가한다면 이곳에서 설정 처리(일반멤버페이지) -->
	<beans:bean id="MemberInterceptor" class="com.brickfarm.interceptor.MemberInterceptor"></beans:bean>
   <interceptors>
      <interceptor>
         <!-- <mapping path="/mypage/shoppingcart"/> -->
         <mapping path="/user/product/addToCart"/>
         <mapping path="/user/member/mypage"/>
         <mapping path="/mypage"/>
         <mapping path="/user/payment/orderPage"/>
         <mapping path="/user/payment/orderCompletePage"/>
         
         <mapping path="/mypage"/>
         <mapping path="/mypage/**"/>
         
         
         <!-- <mapping path="/user/member/loginregistermodel"/> -->
         <beans:ref bean="MemberInterceptor"/>
      </interceptor>
   </interceptors>
   
   
   
   <!-- 인터셉터를 추가한다면 이곳에서 설정 처리(관리자페이지) -->
	<beans:bean id="AdminInterceptor" class="com.brickfarm.interceptor.AdminInterceptor"></beans:bean>
   <interceptors>
      <interceptor>
         <mapping path="/admin"/>
         <mapping path="/admin/statistics/**/*"/>
         <mapping path="/admin/order/**"/>
         <mapping path="/admin/member/**/*"/>
         <mapping path="/admin/board/**/*"/>
         <mapping path="/admin/product/**"/>
         
         <beans:ref bean="AdminInterceptor"/>
      </interceptor>
   </interceptors>
	
	
	
	
</beans:beans>
