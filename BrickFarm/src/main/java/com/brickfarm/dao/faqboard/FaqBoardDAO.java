package com.brickfarm.dao.faqboard;

import java.sql.SQLException;
import java.util.List;

import com.brickfarm.vo.user.kyj.UserFaqVO;
import com.brickfarm.etc.kyj.PaginationInfo;
import com.brickfarm.etc.kyj.board.SearchCriteriaBoard;
import com.brickfarm.vo.admin.kyj.board.AdminFaqVO;

public interface FaqBoardDAO {
	// ==[송지영]==========================================================================================================================================
	// ==================================================================================================================================================

	// ==[김미형]==========================================================================================================================================
	// ==================================================================================================================================================

	// ==[이경민]==========================================================================================================================================
	// ==================================================================================================================================================

	// ==[염세환]==========================================================================================================================================
	// ==================================================================================================================================================

	// ==[박상진]==========================================================================================================================================
	// ==================================================================================================================================================

	// ==[송영태]==========================================================================================================================================
	// ==================================================================================================================================================

	// ==[김용진]==========================================================================================================================================
	/**
	 * @methodName : selectAllFaq
	 * @author : kyj
	 * @return
	 * @throws SQLException
	 * @returnValue : @return
	 * @returnValue : @throws SQLException
	 * @date : 2023. 10. 4. 오전 12:54:36
	 * @description : 데이터베이스로부터 FAQ 전체 목록을 얻어와 반환한다.
	 */
	public List<UserFaqVO> selectAllFaq() throws SQLException;
	
	/* === 자주묻는 질문 관리 ================================================================================================================================================ */
	// 자주묻는 질문 관리 - 자주묻는 질문 관리 페이지에 표현할 정보의 페이지네이션을 위해 조건에 해당하는 전체 row 개수를 데이터베이스로부터 얻어와 반환한다.
	public int selectFaqByConditionCountInAdmin(SearchCriteriaBoard sc) throws SQLException;
	
	// 자주묻는 질문 관리 - 넘겨받은 페이지 정보와 검색 조건으로 게시글 목록을 데이터베이스에서 받아와 반환한다.
	public List<AdminFaqVO> selectFaqByConditionInAdmin(PaginationInfo pi, SearchCriteriaBoard sc) throws SQLException;
	
	// 자주묻는 질문 관리 - 넘겨받은 자주묻는 질문 글번호로 게시글 상세정보를 데이터베이스에서 받아와 반한한다.
	public AdminFaqVO selectFaqByFaqBoardNoInAdmin(int faqBoardNo) throws SQLException;
	
	// 자주묻는 질문 관리 - 넘겨받은 값으로 자주묻는 질문 게시글을 데이터베이스에 추가한다.
	public int insertFaq(AdminFaqVO faq) throws SQLException;
	
	// 자주묻는 질문 관리 - 넘겨받은 게시글 번호에 해당하는 게시글을 데이터베이스에서 삭제한다.
	public int deleteFaqByFaqBoardNo(int faqBoardNo) throws SQLException;

	// 자주묻는 질문 관리 - 넘겨받은 값에 해당하는 자주묻는 질문 게시글을 데이터베이스에서 수정한다. 
	public int updateFaq(AdminFaqVO faq) throws SQLException;
	// ==================================================================================================================================================
}
